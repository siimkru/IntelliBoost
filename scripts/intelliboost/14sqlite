#!/system/bin/sh
# Sqlite yay
# Defrags database files using latest SQULITE3 binary

LOG=/data/intelliboost/logs/sqlite3.log
sqlite=/system/xbin/sqlite3
box=/system/xbin/busybox

# Loop to reset log values
if [ -f \$LOG ]; then
$box rm -f \$LOG;
$box touch \$LOG;
else
  $box touch \$LOG;
fi;

mount -o remount,rw -t auto / >> $LOG 2>> $LOG
mount -t rootfs -o remount,rw rootfs >> $LOG 2>> $LOG
mount -o remount,rw -t auto /system >> $LOG 2>> $LOG
mount -o remount,rw /data >> $LOG 2>> $LOG
mount -o remount,rw /cache >> $LOG 2>> $LOG

# sqlite3 on boot

if [ -e /data/intelliboost/sqlitecnt ]; then
	$box echo "SQlite Counter File Exists" >> $LOG
	CNT=/data/intelliboost/sqlitecnt
	SC=`cat $CNT`
	if [ $SC -eq 0 ]; then
		$box echo "1" > $CNT >> $LOG 2>> $LOG
		$box echo "First Boot" >> $LOG
		exit
	elif [ $SC -eq 1 ]; then
		$box echo "2" > $CNT >> $LOG 2>> $LOG
		$box echo "Second Boot" >> $LOG
		exit
	elif [ $SC -eq 2 ]; then
		$box echo "Third Boot" >> $LOG

		   #time and date in enoch format
	    $box echo "Starting Sqlite3 Vacuum and reindex $( date +"%m-%d-%Y %H:%M:%S" )" >> $LOG
		$box echo "Now Optimizing" >> $LOG

		# Vacuum
	for i in `$box find /d* -iname "*.db"`; do
		$sqlite $i 'VACUUM;' >> $LOG 2>> $LOG
		resVac=$?
		if [ $resVac == 0 ]; then
			resVac="SUCCESS";
		else
			resVac="ERRCODE-$resVac";
		fi;
		
		# Reindex
		$sqlite $i 'REINDEX;';
		resIndex=$?
		if [ $resIndex == 0 ]; then
			resIndex="SUCCESS";
		else
			resIndex="ERRCODE-$resIndex" >> $LOG 2>> $LOG
		fi;
		$box echo "Database $i:  VACUUM=$resVac  REINDEX=$resIndex" >> $LOG
	done
	  
				$box echo "Finished Sqlite3 Vacuum and reindex $( date +"%m-%d-%Y %H:%M:%S" )" >> $LOG

		done;
fi;

mount -o remount,ro -t auto / >> $LOG 2>> $LOG
mount -t rootfs -o remount,ro rootfs >> $LOG 2>> $LOG
mount -o remount,ro -t auto /system >> $LOG 2>> $LOG
mount -o remount,rw /data >> $LOG 2>> $LOG
mount -o remount,rw /cache >> $LOG 2>> $LOG