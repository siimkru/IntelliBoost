#!/system/bin/sh
# Dynamic zipalign on boot script

mount -o remount,rw -t auto /
mount -t rootfs -o remount,rw rootfs
mount -o remount,rw -t auto /system
mount -o remount,rw /data
mount -o remount,rw /cache

# Set Variables
LOG=/data/intelliboost/logs/zipalign.log
ZIPALIGNDB=/data/zipalign.db
count=/data/intelliboost/zipaligncnt
zap=`cat $count`

# Loop to reset log values
if [ -f \$LOG ]; then
busybox rm -f \$LOG;
touch \$LOG;
else
  touch \$LOG;
fi;

# Count boot times
if [ ! -f $ZIPALIGNDB ]; then
	touch $ZIPALIGNDB;
fi;

  if [ $zap -eq 0 ]; then
    busybox echo "1" > $count
    busybox echo "First Boot, ZipAlign starts at 3rd boot" | tee -a $LOG
    exit

  elif [ $zap -eq 1 ]; then
    busybox echo "2" > $count
    busybox echo "Second Boot, ZipAlign starts at 3rd boot" | tee -a $LOG
    exit

  elif [ $zap -eq 2 ]; then
    busybox echo "0" > $count
    busybox echo "Third Boot" | tee -a $LOG
    busybox echo "Now Zipaligning" | tee -a $LOG

# Get d&T in enoch format
echo "Starting Automatic ZipAlign $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG

for DIR in /system/app /data/app ; do
  cd $DIR
  for APK in *.apk ; do
    if [ $APK -ot $ZIPALIGNDB ] && [ $(grep "$DIR/$APK" $ZIPALIGNDB|wc -l) -gt 0 ] ; then
      echo "Already checked: $DIR/$APK" | tee -a $LOG
    else
      zipalign -c 4 $APK
      if [ $? -eq 0 ] ; then
        echo "Already aligned: $DIR/$APK" | tee -a $LOG
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      else
        echo "Now aligning: $DIR/$APK" | tee -a $LOG
        zipalign -f 4 $APK /cache/$APK
        busybox mount -o rw,remount /system
        cp -f -p /cache/$APK $APK
        busybox rm -f /cache/$APK
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      fi
    fi
  done
done

touch $ZIPALIGNDB
echo "Automatic ZipAlign finished at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG

mount -o remount,ro -t auto /
mount -t rootfs -o remount,ro rootfs
mount -o remount,ro -t auto /system
mount -o remount,rw /data
mount -o remount,rw /cache