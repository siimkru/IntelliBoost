#!/system/bin/sh
# IntelliBoost Engine

# Define variables
LOG=/data/intelliboost/logs/engine.log
A=$(cat /sys/class/power_supply/battery/capacity)
ver=$(cat /sata/intelliboost/version.txt)
box=/system/xbin/busybox

# Loop to reset log values
if [ -f \$LOG ] then
$box rm -f \$LOG
$box touch \$LOG
else
  $box touch \$LOG
fi

mount -o remount,rw -t auto / >> $LOG 2>> $LOG
mount -t rootfs -o remount,rw rootfs >> $LOG 2>> $LOG
mount -o remount,rw -t auto /system >> $LOG 2>> $LOG
mount -o remount,rw /data >> $LOG 2>> $LOG
mount -o remount,rw /cache >> $LOG 2>> $LOG

$box echo "$( date +"%m-%d-%Y %H:%M:%S" )  Intelliboost engine warming up..." >> $LOG

	 $box echo "# ========================================= #" >> $LOG
	 $box echo "IntelliBoost Version : $ver" >> $LOG
     $box echo "Script Starting At `date`" >> $LOG
	 $box echo "Android Version: `getprop ro.build.id`" >> $LOG
	 $box echo "ROM: `getprop ro.build.display.id`" >> $LOG
     $box echo "Build: `getprop ro.build.version.release`" >> $LOG
     $box echo "Battery capacity: $A" >> $LOG
     $box echo "Kernel: `uname -r`" >> $LOG
	 $box echo "" >> $LOG
     exec >> $LOG 2>&1
     set -x
############################   Kernel   ##################################

# MPS
$box echo "" >> $LOG
$box echo "Enable CPU multicore power save..." >> $LOG
if [ -f "/sys/devices/system/cpu/sched_mc_power_savings" ] then
$box echo "2" > /sys/devices/system/cpu/sched_mc_power_savings >> $LOG 2>> $LOG
fi
if $box grep 2 /sys/devices/system/cpu/sched_mc_power_savings then
$box echo "Successfully Applied" >> $LOG
else
$box echo "This feature is not avaible for you, because your device is not multi core or your CPU/kernel doesn't support it" >> $LOG
fi

# Fast Charge
# Dynamic fast charging by finding the largest value string inside of applicable values

#$box echo "$( date +"%m-%d-%Y %H:%M:%S" )  Attempting to force fast_charge..." >> $LOG
#$box echo "Results may vary. Kernel must support ffc" >> $LOG
$box echo "" >> $LOG
$box echo "Activating fast charging mode..." >> $LOG

awk '$0>x{x=$0}END{$volt=x}' /sys/kernel/fast_charge/ac_levels >> $LOG 2>> $LOG
awk '$0>y{y=$0}END{$volt1=y}' /sys/kernel/fast_charge/usb_levels >> $LOG 2>> $LOG
awk '$0>z{z=$0}END{$volt2=z}' /sys/kernel/fast_charge/wireless_levels >> $LOG 2>> $LOG

$box echo 2 /sys/kernel/fast_charge/force_fast_charge
$box echo $volt > /sys/kernel/fast_charge/ac_charge_level >> $LOG 2>> $LOG
$box echo $volt1 > /sys/kernel/fast_charge/usb_charge_level >> $LOG 2>> $LOG
$box echo $volt2 > /sys/kernel/fast_charge/wireless_charge_level >> $LOG 2>> $LOG

# Initializing x allows the solution to properly handle integer lists with values <= 0
# variable x has no possibility of being a negative integer(mv), thus, initialisation of x is not needed

# Disable Failsafe (At your own risk) => added to UI(grep value =2)
#if [ -e /sys/kernel/fast_charge/failsafe ] then
#       $box echo "0" > /sys/kernel/fast_charge/failsafe
#fi

if grep $volt /sys/kernel/fast_charge/ac_charge_level then
$box echo "Forced fast_charge enabled enabled! [Pass]" >> $LOG
else
$box echo "Forced fast_charge is not supported on your kernel! [Failed]" >> $LOG
fi

$box echo "Disabling GENTLE_FAIR_SLEEPERS" >> $LOG

# Disable Gentle Fair Sleepers(Would Improve smoothness)
$box echo "NO_GENTLE_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features >> $LOG 2>> $LOG
$box echo "NO_NEW_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features >> $LOG 2>> $LOG
$box echo "NO_NORMALIZED_SLEEPER" > /sys/kernel/debug/sched_features >> $LOG 2>> $LOG

# Kernel_panic
# No effect on battery, but inproves stability and no random reboots
# Only needed if kernel is poorly built

$box sysctl -w vm.panic_on_oom=0 >> $LOG 2>> $LOG
$box sysctl -w kernel.softlockup_panic=0 >> $LOG 2>> $LOG
$box sysctl -w kernel.panic_on_oops=0 >> $LOG 2>> $LOG
$box sysctl -w kernel.panic=0 >> $LOG 2>> $LOG
$box echo "" >> $LOG
$box echo "Kernel panic is disabled" >> $LOG


# Disable Debugging

#if [ -e /sys/module/lowmemorykiller/parameters/debug_level ] then
#    $box chmod 644 /sys/module/lowmemorykiller/parameters/debug_level
#    $box echo "0" > /sys/module/lowmemorykiller/parameters/debug_level
#fi
#for parameter in /sys/module/*
#   do
#if [ -e $parameter/parameters/debug_mask ] then
#    $box chmod 644 $parameter/parameters/debug_mask
#    $box echo "0" > $parameter/parameters/debug_mask
#fi

# A TON OF FEATURES WILL BE ADDED IN FUTURE RELEASES

############################   MISC   ##################################
#Kill media server to save battery

$box echo "$( date +"%m-%d-%Y %H:%M:%S" )  Killing mediaserver for battery save" >> $LOG

#Reduces I/O read write speeds (slower response) ~unsignificant
#Battery  drain and overheats ~significant
killall -9 android.process.media >> $LOG 2>> $LOG
killall -9 mediaserver >> $LOG 2>> $LOG
$box echo "Successfully killed" >> $LOG

############################   VALUES   ##################################
# Network speed Tweaks
$box echo "0" > /proc/sys/net/ipv4/tcp_timestamps >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_sack >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_window_scaling >> $LOG 2>> $LOG
$box echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes >> $LOG 2>> $LOG
$box echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl >> $LOG 2>> $LOG
$box echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout >> $LOG 2>> $LOG
$box echo "404480" > /proc/sys/net/core/wmem_max >> $LOG 2>> $LOG
$box echo "404480" > /proc/sys/net/core/rmem_max >> $LOG 2>> $LOG
$box echo "256960" > /proc/sys/net/core/rmem_default >> $LOG 2>> $LOG
$box echo "256960" > /proc/sys/net/core/wmem_default >> $LOG 2>> $LOG
$box echo "4096,16384,404480" > /proc/sys/net/ipv4/tcp_wmem >> $LOG 2>> $LOG
$box echo "4096,87380,404480" > /proc/sys/net/ipv4/tcp_rmem >> $LOG 2>> $LOG
$box echo "Applying Network Tweaks..." >> $LOG >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_moderate_rcvbuf >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/route/flush >> $LOG 2>> $LOG
$box echo "6144" > /proc/sys/net/ipv4/udp_rmem_min >> $LOG 2>> $LOG
$box echo "6144" > /proc/sys/net/ipv4/udp_wmem_min >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_rfc1337 >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/ip_no_pmtu_disc >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/tcp_ecn >> $LOG 2>> $LOG
$box echo "6144 87380 2097152" > /proc/sys/net/ipv4/tcp_wmem >> $LOG 2>> $LOG
$box echo "6144 87380 2097152" > /proc/sys/net/ipv4/tcp_rmem >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_fack >> $LOG 2>> $LOG
$box echo "2" > /proc/sys/net/ipv4/tcp_synack_retries >> $LOG 2>> $LOG
$box echo "2" > /proc/sys/net/ipv4/tcp_syn_retries >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save >> $LOG 2>> $LOG
$box echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/ip_forward >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/net/ipv4/tcp_dsack >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/default/accept_source_route >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/default/accept_redirects >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/all/secure_redirects >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/conf/default/secure_redirects >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/net/ipv4/ip_dynaddr >> $LOG 2>> $LOG
$box echo "1440000" > /proc/sys/net/ipv4/tcp_max_tw_buckets >> $LOG 2>> $LOG
$box echo "57344 57344 524288" > /proc/sys/net/ipv4/tcp_mem >> $LOG 2>> $LOG
$box echo "2097152" > /proc/sys/net/core/rmem_max >> $LOG 2>> $LOG
$box echo "2097152" > /proc/sys/net/core/wmem_max >> $LOG 2>> $LOG
$box echo "262144" > /proc/sys/net/core/rmem_default >> $LOG 2>> $LOG
$box echo "262144" > /proc/sys/net/core/wmem_default >> $LOG 2>> $LOG
$box echo "20480" > /proc/sys/net/core/optmem_max >> $LOG 2>> $LOG
$box echo "2500" > /proc/sys/net/core/netdev_max_backlog >> $LOG 2>> $LOG
$box echo "50" > /proc/sys/net/unix/max_dgram_qlen >> $LOG 2>> $LOG

# VM Tweaks
$box echo "Applying VM Settings..." >> $LOG
$box echo "3" > /proc/sys/vm/page-cluster >> $LOG 2>> $LOG
$box echo "3000" > /proc/sys/vm/dirty_expire_centisecs >> $LOG 2>> $LOG
$box echo "500" > /proc/sys/vm/dirty_writeback_centisecs >> $LOG 2>> $LOG
$box echo "5120" > /proc/sys/vm/min_free_kbytes >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/vm/oom_kill_allocating_task >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/vm/panic_on_oom >> $LOG 2>> $LOG
$box echo "35" > /proc/sys/vm/dirty_background_ratio >> $LOG 2>> $LOG
$box echo "70" > /proc/sys/vm/dirty_ratio >> $LOG 2>> $LOG
$box echo "10" > /proc/sys/vm/vfs_cache_pressure >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/vm/overcommit_memory >> $LOG 2>> $LOG
$box echo "4" > /proc/sys/vm/min_free_order_shift >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/vm/laptop_mode >> $LOG 2>> $LOG
$box echo "0" > /proc/sys/vm/block_dump >> $LOG 2>> $LOG
$box echo "1" > /proc/sys/vm/oom_dump_tasks >> $LOG 2>> $LOG
if [ "$mem" -lt 524288 ]
	then
	sysctl -w vm.dirty_background_ratio=15 >> $LOG 2>> $LOG
	sysctl -w vm.dirty_ratio=30 >> $LOG 2>> $LOG
elif [ "$mem" -lt 1049776 ]
	then
	sysctl -w vm.dirty_background_ratio=1049776
	sysctl -w vm.dirty_ratio=20 >> $LOG 2>> $LOG
else 
	sysctl -w vm.dirty_background_ratio=5 >> $LOG 2>> $LOG
	sysctl -w vm.dirty_ratio=10 >> $LOG 2>> $LOG
fi


# Waifai sleeper
sqlite=/system/xbin/sqlite3

wifi_idle_wait=30000 #30 secs
RETURN_VALUE=\$(\$sqlite /data/data/com.android.providers.settings/databases/settings.db "select value from secure where name='wifi_idle_ms'")
if [ "\$RETURN_VALUE" = '' ] then
   \$sqlite /data/data/com.android.providers.settings/databases/settings.db "insert into secure (name, value) values ('wifi_idle_ms', \$wifi_idle_wait )" >> $LOG 2>> $LOG
else
   \$sqlite /data/data/com.android.providers.settings/databases/settings.db "update secure set value=\$wifi_idle_wait where name='wifi_idle_ms'" >> $LOG 2>> $LOG
fi
$box echo "" >> $LOG
$box echo "Wifi sleeper is activated.." >> $LOG
$box echo "" >> $LOG
$box echo "$( date +"%m-%d-%Y %H:%M:%S" )Intelliboost engine turned on successfully" >> $LOG

mount -o remount,ro -t auto / >> $LOG 2>> $LOG
mount -t rootfs -o remount,ro rootfs >> $LOG 2>> $LOG
mount -o remount,ro -t auto /system >> $LOG 2>> $LOG
mount -o remount,rw /data >> $LOG 2>> $LOG
mount -o remount,rw /cache >> $LOG 2>> $LOG