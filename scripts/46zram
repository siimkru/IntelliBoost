#!/system/bin/sh
# Dynamic ZRAM shell script
# Thanks sonickles9
# TODO: unsure whether zram is recomended, might kill battery for ram, therefore threshoild value is 5
# more aggro will be 10 or 15 for threshold values

# Define vars
LOG=/data/intelliboost/logs/zram.log
getprop=/data/resourceIB/getprop
box=/system/xbin/busybox

# Loop to reset log values
if [ -f \$LOG ]; then
$box rm -f \$LOG;
$box touch \$LOG;
else
  $box touch \$LOG;
fi;

mount -o remount,rw -t auto / 2>> $LOG
mount -t rootfs -o remount,rw rootfs 2>> $LOG
mount -o remount,rw -t auto /system 2>> $LOG
mount -o remount,rw /data 2>> $LOG
mount -o remount,rw /cache 2>> $LOG

if [ ! -e /data/intelliboost/memstat ]; then
$box touch /data/intelliboost/memstat 2>> $LOG
$box echo "0" >> /data/intelliboost/memstat 2>> $LOG
fi;

$box echo "Calculating ZRAM values..." >> $LOG

#find swap devices
if [ -e "/dev/block/zram0" ]; then
ZRAMD="zram"
$box echo "zRAM device available as $ZRAMD" >> $LOG
elif  [ -e "/dev/block/vnswap0" ]; then
ZRAMD="vnswap"
$box echo "zRAM device available as $ZRAMD" >> $LOG
else
$box echo "zRAM device unavailable" >> $LOG
exit 1
fi

#deactivate existing swap
num="0"

ZRAMN=$($box find /dev/block -name $ZRAMD* | $box sort | tail -n 1 )
ZRAMN=$((${ZRAMN#*$ZRAMD}+1))
for z in $($box find /dev/block -name $ZRAMD* | $box sort )
do
$box echo "=> deactivating swap in $z" >> $LOG
if [ -e /system/bin/swapoff ]
then
/system/bin/swapoff $z >> $LOG 2>> $LOG 
else
$box swapoff $z >> $LOG 2>> $LOG 
fi
if [ -e "/sys/block/$ZRAMD$num/reset" ]
then
$box echo "Resetting ZRAM values..." >> $LOG
$box echo 1 > /sys/block/$ZRAMD$num/reset 2>> $LOG
fi
num=$(($num+1))
done

#calculate sizes
RAM=$((`$box awk '/MemTotal/{print $2}' /proc/meminfo`))
ZTHRESHOLD="5"
ZRAM1=$(( $RAM * $ZTHRESHOLD / 100 ))
$box echo "val1 = $RAM * $ZTHRESHOLD / 100 = $ZRAM1 " >> $LOG
val2=$(($($box awk '/MemFree/{print $2}' /proc/meminfo)))

$box echo "val2 = $val2" >> $LOG
val3=$(( ( $RAM - $val2 ) ))
$box echo $val3 >> /data/intelliboost/memstat 2>> $LOG
$box echo "val3 = $val3" >> $LOG

MEMSTATS=($( $box cat /system/data/intelliboost/memstat ))
for stat in ${!MEMSTATS[@]}
do
mem=$(( $mem+${MEMSTATS[$stat]} ))
done
mem=$(($mem/${#MEMSTATS[@]}))
ADDMEM=$((($MEMSTATS) * $ZTHRESHOLD / 10))
ZRAM=$((($ZRAM1+$ADDMEM)*26/100 * 1024))

#change size
$box echo "You have $(($RAM)) megabytes of system RAM." >> $LOG
$box echo "Setting zRAM values dynamically..." > $LOG
$box echo "=> zRAM Size: $ZRAM bytes ($(($ZRAM / 1024 / 1024)) megabytes)" >> $LOG
num=0
for z in $($box find /dev/block -name $ZRAMD* | $box sort )
do
$box echo $(( $ZRAM / $ZRAMN )) > /sys/block/$ZRAMD$num/disksize 2>> $LOG
num=$(($num+1))
done

#mkswap
num=0
for z in $($box find /dev/block -name $ZRAMD* | $box sort )
do
$box echo "==> Preparing swapspace in $z, $num of $ZRAMN" >> $LOG
$box mkswap $z >> $LOG 2>> $LOG
num=$(($num+1))
done

#swapon
num=0
for z in $($box find /dev/block -name $ZRAMD* | $box sort )
do
$box echo "==> Swapping in swapspace in $z, $num of $ZRAMN" >> $LOG
$box swapon $z -p 256 >> $LOG 2>> $LOG
num=$(($num+1))
done

#vm parameters
swappiness=$(( ($ZRAM / 1024 / 1024) * 100 / ($RAM / 1024) + 50 ))
$box sysctl -w vm.swappiness=$swappiness >> $LOG 2>> $LOG
$box sysctl -w vm.vfs_cache_pressure=10 >> $LOG 2>> $LOG

#end
$box echo "zRAM values are properly set dynamically :)" >> $LOG

mount -o remount,ro -t auto / >> $LOG 2>> $LOG
mount -t rootfs -o remount,ro rootfs >> $LOG 2>> $LOG
mount -o remount,ro -t auto /system >> $LOG 2>> $LOG
mount -o remount,rw /data >> $LOG 2>> $LOG
mount -o remount,rw /cache >> $LOG 2>> $LOG