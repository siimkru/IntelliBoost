#!/system/bin/sh
# Zipalign Script
# Copyright (C) 2017 @ala_mo
#=======================================================================#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#=======================================================================#

if [ -e /data/intelliboost/zipaligncnt ]; then
	count=/data/intelliboost/zipaligncnt
	zap=`cat $count`
	log=/data/intelliboost/zipalign.log;
	zipaligndb=/data/zipalign.db;
fi 

	if [ $zap -eq 0 ]; then
		echo "1" > $count
		echo "First Boot, ZipAlign starts at 3rd boot" | tee -a $log
		exit
	elif [ $zap -eq 1 ]; then
		echo "2" > $counts
		echo "Second Boot, ZipAlign starts at 3rd boot" | tee -a $log
		echo "Lemme make use of this cycle to clear the logs of dead scripts"
		rm -f /data/intelliboost/setprop.log
		rm -f /data/intelliboost/setprop.log
		exit

	elif [ $zap -eq 2 ]; then
		echo "3" > $count
	    echo "Third Boot" | tee -a $log
		echo "Now Zipaligning" | tee -a $log
		rm -f /data/intelliboost/zipaligncnt
		touch /data/intelliboost/zipaligncnt
		echo "0" > /data/intelliboost/zipaligncnt

		if [ -e $log ]; then
			rm $log;
		fi;

		if [ ! -f $zipaligndb ]; then
			touch $zipaligndb;
		fi;

# Get d&T in enoch format
		echo "Starting Automatic ZipAlign $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $log;

		for DIR in /system/app /data/app; do    #zipaligning apps
			cd $DIR;
			for APK in *.apk; do
				if [ $APK -ot $zipaligndb ] && [ $(grep "$DIR/$APK" $zipaligndb|wc -l) -gt 0 ]; then
					echo "Already checked: $DIR/$APK" | tee -a $log;
				else
					ZIPCHECK=`/system/xbin/zipalign -c -v 4 $APK | grep FAILED | wc -l`;
					if [ $ZIPCHECK == "1" ]; then
						echo "Now aligning: $DIR/$APK" | tee -a $log;
						/system/xbin/zipalign -v -f 4 $APK /data/local/$APK;
						busybox mount -o rw,remount /system;
						cp -f -p /data/local/$APK $APK;
						grep "$DIR/$APK" $zipaligndb > /dev/null || echo $DIR/$APK >> $zipaligndb;
					else
						echo "Already aligned: $DIR/$APK" | tee -a $log;
						grep "$DIR/$APK" $zipaligndb > /dev/null || echo $DIR/$APK >> $zipaligndb;
					fi;
				fi;
			done;
		done;
	fi;

		busybox mount -o ro,remount /system;
		touch $zipaligndb;
		echo "Automatic ZipAlign finished at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $log;
	
else
	touch /data/intelliboost/zipaligncnt
	echo "0" > /data/intelliboost/zipaligncnt      #Resets counter file for loop
	echo "First Installation"
	echo "Now Zipaligning"
		log=/data/zipalign.log;
		zipaligndb=/data/zipalign.db;
		if [ -e $log ]; then
			rm $log;
		fi;

		if [ ! -f $zipaligndb ]; then
			touch $zipaligndb;
		fi;

		echo "Starting FV Automatic ZipAlign $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $log;

		for DIR in /system/app /data/app; do
			cd $DIR;
			for APK in *.apk; do
				if [ $APK -ot $zipaligndb ] && [ $(grep "$DIR/$APK" $zipaligndb|wc -l) -gt 0 ]; then
					echo "Already checked: $DIR/$APK" | tee -a $log;
				else
					ZIPCHECK=`/system/xbin/zipalign -c -v 4 $APK | grep FAILED | wc -l`;
					if [ $ZIPCHECK == "1" ]; then
						echo "Now aligning: $DIR/$APK" | tee -a $log;
						/system/xbin/zipalign -v -f 4 $APK /data/local/$APK;
						busybox mount -o rw,remount /system;
						cp -f -p /data/local/$APK $APK;
						grep "$DIR/$APK" $zipaligndb > /dev/null || echo $DIR/$APK >> $zipaligndb;
					else
						echo "Already aligned: $DIR/$APK" | tee -a $log;
						grep "$DIR/$APK" $zipaligndb > /dev/null || echo $DIR/$APK >> $zipaligndb;
					fi;
				fi;
			done;
		done;
fi;